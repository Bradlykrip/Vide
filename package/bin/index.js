var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};!function(e){if("object"==typeof module&&"object"==typeof module.exports){var o=e(require,exports);void 0!==o&&(module.exports=o)}else"function"==typeof define&&define.amd&&define(["require","exports","fs","./config","process"],e)}(function(e,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Clean=o.$=o.Dom=o.Css=void 0;const t=__importDefault(e("fs")),r=e("./config"),s=e("process"),i=e("cheerio"),n=e("htmlparser2"),c=e("chalk");console.log(`${c.blue("●")} parsing files`);const l=e("transform-css-to-js");let f;try{f=t.default.readdirSync(r.config.rootDir||"./","utf-8")}catch(e){throw"Root directory stated in config not found."}const d=[];f.forEach(e=>{e.includes(".vide")&&d.push(e)}),0===d.length&&(console.log("   "+c.red("●")+" No files for compiling"),s.exit());const u=[],a=[],p=[],m=[];for(let e=0;e<d.length;e++){const o=d[e];let s;s=void 0!==r.config.rootDir?t.default.readFileSync(`${r.config.rootDir}/${o}`,"utf-8").trim():t.default.readFileSync(`./${o}`,"utf-8").trim();const c=n.parseDOM(s),f=i.load(c);if(a.push(f("Vide *")),f.prototype.name=o,p.push(f),!Object.keys(f("Vide").get()[0].attribs).includes("script")){const e=l(f("Vide").clone().children().remove().end().text().trim());u.push({name:o,css:JSON.parse(e)})}const h=n.parseDOM(s),g=i.load(h);g.prototype.name=o,m.push(g)}o.Css=u,o.Dom=a,o.$=p,o.Clean=m});