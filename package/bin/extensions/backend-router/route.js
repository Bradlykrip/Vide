!function(t){if("object"==typeof module&&"object"==typeof module.exports){var e=t(require,exports);void 0!==e&&(module.exports=e)}else"function"==typeof define&&define.amd&&define(["require","exports","process","../../index"],t)}(function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=t("process"),l=t("../../index"),r={};let s;const a=t("chalk");console.log(`${a.blue("●")} compiling routes`),l.Clean.forEach((t,e)=>{null==t("Router").html()||(s=e)});const i=l.Clean[s];null==i&&(console.log(`${a.red("   ●")} Router enabled but no router found`),o.exit());const{children:u}=i("Router").get()[0];u.forEach(t=>{const e=t.children;null==e||(void 0===e[0]?("*"===t.attribs.path?console.log(`${a.blue("●")}    built route: ${t.attribs.type}`):console.log(`${a.blue("●")}    built route: ${t.attribs.path}`),r[t.attribs.path]={path:t.attribs.path,dest:t.attribs.dest,type:t.attribs.type}):("*"==t.attribs.path?console.log(`${a.blue("●")}    built route: ${t.attribs.type}`):console.log(`${a.blue("●")}    built route: ${t.attribs.path}`),r[t.attribs.path]={callback:e[0].data,path:t.attribs.path,dest:t.attribs.dest,type:t.attribs.type}))}),e.default=r});